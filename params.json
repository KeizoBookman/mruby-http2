{"name":"mruby-http2","tagline":"HTTP2 Module for mruby","body":"# HTTP2 Module for mruby  [![Build Status](https://travis-ci.org/matsumoto-r/mruby-http2.png?branch=master)](https://travis-ci.org/matsumoto-r/mruby-http2)\r\nHTTP2 module for mruby using [nghttp2](https://github.com/tatsuhiro-t/nghttp2). You can access Web site using HTTP/2 protocol from mruby applications or devices with mruby, and run HTTP/2 Web server easily.\r\n\r\n- [HTTP/2](http://http2.github.io/) \r\n\r\n    HTTP/2 is a replacement for how HTTP is expressed \"on the wire\". It is not a ground-up rewrite of the protocol; HTTP methods, status codes and semantics will be the same, and it should be possible to use the same APIs as HTTP/1.x (possibly with some small additions) to represent the protocol.\r\n\r\n## TODO\r\nThis is a very early version, please test and report errors. Wellcome pull-request.\r\n- replace some function to mrbgem\r\n- more customizable Web server config\r\n- implement some class (Proxy...)\r\n- implement some method (post...)\r\n\r\n## example\r\n### mruby-http2 Test Site\r\n```\r\nhttps://http2.matsumoto-r.jp:58080/index.html\r\n```\r\n### HTTP2::Client\r\n##### HTTP2 get\r\nAccess to nghttpd HTTP/2 Server\r\n```ruby\r\nr = HTTP2::Client.get 'https://127.0.0.1:8080/index.html'\r\n\r\nr.response\r\nr.body\r\nr.request_headers\r\nr.response_headers\r\nr.status\r\nr.body\r\nr.body_length\r\nr.stream_id\r\n```\r\n##### HTTP2 get reuslt\r\n```ruby\r\n{:body=>\"hello mruby-http2!!\\n\", :body_length=>20, :recieve_bytes=>20.0, :response_headers=>{\"last-modified\"=>\"Wed, 19 Mar 2014 08:41:00 GMT\", \"server\"=>\"nghttpd nghttp2/0.4.0-DEV\", \":status\"=>\"200\", \"date\"=>\"Thu, 20 Mar 2014 11:38:17 GMT\", \"cache-control\"=>\"max-age=3600\", \"content-length\"=>\"20\"}, :frame_send_header_goway=>true, :request_headers=>{\"user-agent\"=>\"mruby-http2/0.0.1\", \"accept\"=>\"*/*\", \":authority\"=>\"127.0.0.1:8080\", \":scheme\"=>\"https\", \"accept-encoding\"=>\"gzip\", \":method\"=>\"GET\", \":path\"=>\"/index.html\"}, :stream_id=>1}\r\n\"hello mruby-http2!!\\n\"\r\n{\"user-agent\"=>\"mruby-http2/0.0.1\", \"accept\"=>\"*/*\", \":authority\"=>\"127.0.0.1:8080\", \":scheme\"=>\"https\", \"accept-encoding\"=>\"gzip\", \":method\"=>\"GET\", \":path\"=>\"/index.html\"}\r\n{\"last-modified\"=>\"Wed, 19 Mar 2014 08:41:00 GMT\", \"server\"=>\"nghttpd nghttp2/0.4.0-DEV\", \":status\"=>\"200\", \"date\"=>\"Thu, 20 Mar 2014 11:38:17 GMT\", \"cache-control\"=>\"max-age=3600\", \"content-length\"=>\"20\"}\r\n200\r\n\"hello mruby-http2!!\\n\"\r\n20\r\n1\r\n```\r\n##### Set callback block from Ruby\r\nAccess to nghttpd HTTP/2 Server\r\n```ruby\r\nr = HTTP2::Client.get 'https://127.0.0.1:8080/index.html'\r\n\r\np r.response\r\np r.body\r\np r.request_headers\r\np r.response_headers\r\np r.status\r\np r.body\r\np r.body_length\r\np r.stream_id\r\n\r\np \"---- set callback version ----\"\r\n\r\ns = HTTP2::Client.new\r\ns.uri = 'https://127.0.0.1:8080/index.html'\r\ns.on_header_callback {\r\n  p \"header callback\"\r\n}\r\ns.send_callback {\r\n  p \"send_callback\"\r\n}\r\ns.recv_callback {\r\n  p \"recv_callback\"\r\n}\r\ns.before_frame_send_callback {\r\n  p \"before_frame_send_callback\"\r\n}\r\ns.on_frame_send_callback {\r\n  p \"on_frame_send_callback\"\r\n}\r\ns.on_frame_recv_callback {\r\n  p \"on_frame_recv_callback\"\r\n}\r\ns.on_stream_close_callback {\r\n  p \"on_stream_close_callback\"\r\n}\r\ns.on_data_chunk_recv_callback {\r\n  p \"on_data_chunk_recv_callback\"\r\n}\r\nr = s.get\r\np r.response\r\n\r\n```\r\n##### Result\r\n```ruby\r\n\"---- set callback version ----\"\r\n\"recv_callback\"\r\n\"on_frame_recv_callback\"\r\n\"recv_callback\"\r\n\"before_frame_send_callback\"\r\n\"send_callback\"\r\n\"on_frame_send_callback\"\r\n\"before_frame_send_callback\"\r\n\"send_callback\"\r\n\"on_frame_send_callback\"\r\n\"recv_callback\"\r\n\"header callback\"\r\n\"header callback\"\r\n\"header callback\"\r\n\"header callback\"\r\n\"header callback\"\r\n\"header callback\"\r\n\"on_frame_recv_callback\"\r\n\"on_data_chunk_recv_callback\"\r\n\"on_frame_recv_callback\"\r\n\"on_frame_recv_callback\"\r\n\"on_stream_close_callback\"\r\n\"recv_callback\"\r\n\"before_frame_send_callback\"\r\n\"send_callback\"\r\n\"on_frame_send_callback\"\r\n{:body=>\"hello mruby-http2!!\\n\", :body_length=>20, :recieve_bytes=>20.0, :response_headers=>{\"last-modified\"=>\"Wed, 19 Mar 2014 08:41:00 GMT\", \"server\"=>\"nghttpd nghttp2/0.4.0-DEV\", \":status\"=>\"200\", \"date\"=>\"Thu, 20 Mar 2014 11:39:34 GMT\", \"cache-control\"=>\"max-age=3600\", \"content-length\"=>\"20\"}, :frame_send_header_goway=>true, :request_headers=>{\"user-agent\"=>\"mruby-http2/0.0.1\", \"accept\"=>\"*/*\", \":authority\"=>\"127.0.0.1:8080\", \":scheme\"=>\"https\", \"accept-encoding\"=>\"gzip\", \":method\"=>\"GET\", \":path\"=>\"/index.html\"}, :stream_id=>1}\r\n```\r\n### HTTP2::Server\r\n##### run HTTP/2 server\r\n```ruby\r\ns = HTTP2::Server.new({\r\n\r\n  # required\r\n  :port => 8080, \r\n  :key => \"/path/to/server.key\", \r\n  :crt =>\"/path/to/server.crt\",\r\n  :document_root => \"/path/to/document_root\",\r\n  :server_name => \"mruby-http2 server\",\r\n\r\n  #\r\n  # optional\r\n  #\r\n  # debug defualt: false\r\n  #:debug => true,\r\n\r\n  # tls defualt: true\r\n  # ignore :key and :crt when :tls is false\r\n  #:tls => false,\r\n})\r\n\r\ns.run\r\n```\r\n##### request from HTTP2::Client \r\n```ruby\r\nr = HTTP2::Client.get 'https://127.0.0.1:8080/index.html'\r\n\r\np r.response\r\np r.body\r\np r.request_headers\r\np r.response_headers\r\np r.status\r\np r.body\r\np r.body_length\r\np r.stream_id\r\n\r\np \"---- set callback version ----\"\r\n\r\ns = HTTP2::Client.new\r\ns.uri = 'https://127.0.0.1:8080/index.html'\r\ns.on_header_callback {\r\n  p \"header callback\"\r\n}\r\ns.send_callback {\r\n  p \"send_callback\"\r\n}\r\ns.recv_callback {\r\n  p \"recv_callback\"\r\n}\r\ns.before_frame_send_callback {\r\n  p \"before_frame_send_callback\"\r\n}\r\ns.on_frame_send_callback {\r\n  p \"on_frame_send_callback\"\r\n}\r\ns.on_frame_recv_callback {\r\n  p \"on_frame_recv_callback\"\r\n}\r\ns.on_stream_close_callback {\r\n  p \"on_stream_close_callback\"\r\n}\r\ns.on_data_chunk_recv_callback {\r\n  p \"on_data_chunk_recv_callback\"\r\n}\r\nr = s.get\r\np r.response\r\n```\r\n##### response\r\n```ruby\r\n{:body=>\"hello mruby-http2!!\\n\", :body_length=>20, :recieve_bytes=>20.0, :response_headers=>{\":status\"=>\"200\"}, :frame_send_header_goway=>true, :request_headers=>{\"user-agent\"=>\"mruby-http2/0.0.1\", \"accept\"=>\"*/*\", \":authority\"=>\"127.0.0.1:8080\", \":scheme\"=>\"https\", \"accept-encoding\"=>\"gzip\", \":method\"=>\"GET\", \":path\"=>\"/index.html\"}, :stream_id=>1}\r\n\"hello mruby-http2!!\\n\"\r\n{\"user-agent\"=>\"mruby-http2/0.0.1\", \"accept\"=>\"*/*\", \":authority\"=>\"127.0.0.1:8080\", \":scheme\"=>\"https\", \"accept-encoding\"=>\"gzip\", \":method\"=>\"GET\", \":path\"=>\"/index.html\"}\r\n{\":status\"=>\"200\"}\r\n200\r\n\"hello mruby-http2!!\\n\"\r\n20\r\n1\r\n\"---- set callback version ----\"\r\n\"recv_callback\"\r\n\"before_frame_send_callback\"\r\n\"send_callback\"\r\n\"on_frame_send_callback\"\r\n\"recv_callback\"\r\n\"on_frame_recv_callback\"\r\n\"recv_callback\"\r\n\"before_frame_send_callback\"\r\n\"send_callback\"\r\n\"on_frame_send_callback\"\r\n\"recv_callback\"\r\n\"header callback\"\r\n\"on_frame_recv_callback\"\r\n\"recv_callback\"\r\n\"recv_callback\"\r\n\"on_data_chunk_recv_callback\"\r\n\"on_frame_recv_callback\"\r\n\"recv_callback\"\r\n\"recv_callback\"\r\n\"on_frame_recv_callback\"\r\n\"on_stream_close_callback\"\r\n\"recv_callback\"\r\n\"before_frame_send_callback\"\r\n\"send_callback\"\r\n\"on_frame_send_callback\"\r\n{:body=>\"hello mruby-http2!!\\n\", :body_length=>20, :recieve_bytes=>20.0, :response_headers=>{\":status\"=>\"200\"}, :frame_send_header_goway=>true, :request_headers=>{\"user-agent\"=>\"mruby-http2/0.0.1\", \"accept\"=>\"*/*\", \":authority\"=>\"127.0.0.1:8080\", \":scheme\"=>\"https\", \"accept-encoding\"=>\"gzip\", \":method\"=>\"GET\", \":path\"=>\"/index.html\"}, :stream_id=>1}\r\n```\r\n\r\n## install by mrbgems\r\n - add conf.gem line to `build_config.rb`\r\n\r\n```ruby\r\nMRuby::Build.new do |conf|\r\n\r\n  # ... (snip) ...\r\n\r\n  conf.gem :github => 'matsumoto-r/mruby-http2'\r\nend\r\n```\r\n\r\n - build\r\n\r\n```\r\nrake\r\n```\r\n\r\n# License\r\nunder the MIT License:\r\n\r\n* http://www.opensource.org/licenses/mit-license.php\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}